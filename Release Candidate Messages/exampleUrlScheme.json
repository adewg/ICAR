{
  "openapi": "3.0.1",
  "info": {
    "title": "Release Candidate Messages",
    "description": "The specifications of messages which are ready for ICAR approval and release",
    "version": "1.0",
    "contact" : {
      "name": "Animal Data Exchange Working Group",
      "url": "https://www.icar.org/index.php/technical-bodies/working-groups/animal-data-exchange-wg/",
      "email": "icar@icar.org"
    }
  },
  "servers": [
    {
      "url": "http://example.com"
    }
  ],
  "tags" : [
    {
	    "name" : "release-candidate",
	    "description" : "approved by the working group, waiting for a test"
    },
    {
      "name": "additions",
      "description": "new endpoints not yet approved"
    }
  ],
  "paths": {
    "/locations/{location-scheme}/{location-id}/milking-visits": {
      "get": {
        "operationId" : "get-milking-visits",
        "summary": "Get the data for milking visits",
        "description": "# Purpose\nProvides data from visits of animals to a milking parlour\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the milking results for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMilkingVisitsResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/births": {
      "get": {
        "operationId" : "get-births",
        "summary": "Get the births for a certain location",
        "description": "# Purpose\nProvides the born animals on a location\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the births for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMovementBirthRegistrationResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/deaths": {
      "get": {
        "operationId" : "get-deaths",
        "summary": "Get the deaths for a certain location",
        "description": "# Purpose\nProvides the died animals on a location\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the died animals for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMovementDeathResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/arrivals": {
      "get": {
        "operationId" : "get-arrivals",
        "summary": "Get the arrivals for a certain location",
        "description": "# Purpose\nProvides the arrived animals on a location\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the arrived animals for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMovementArrivalResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/departures": {
      "get": {
        "operationId" : "get-departures",
        "summary": "Get the departures for a certain location",
        "description": "# Purpose\nProvides the departed animals from a location\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start-date-time",
            "in": "query",
            "description": "The start of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "end-date-time",
            "in": "query",
            "description": "The end of the date-time range for the data to get in the request.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the milking results for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMovementDepartureResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    }, 
    "/locations/{location-scheme}/{location-id}/animals": {
      "get": {
        "operationId" : "get-animals",
        "summary": "Get the animals for a certain location",
        "description": "# Purpose\nProvides the animals on a location\n",
        "tags": [ "release-candidate"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the animals for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarAnimalCoreResponse"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Pregnancy-Diagnosis": {
      "get": {
        "operationId" : "get-pregnancy-diagnosis",
        "summary": "Get the pregnancy diagnosis for a certain location",
        "description": "# Purpose\nProvides the pregnancy diagnosis on a location\n",
        "tags": [ "addition"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the pregnancy diagnosis for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarReproPregnancyDiagnosisEventResource"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Insemination": {
      "get": {
        "operationId" : "get-Insemination",
        "summary": "Get the inseminations for a certain location",
        "description": "# Purpose\nProvides the Inseminations on a location\n",
        "tags": [ "addition"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the inseminations for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarReproInseminationEventResource"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Drying-Off": {
      "get": {
        "operationId" : "get-Drying-Off",
        "summary": "Get the drying off for a certain location",
        "description": "# Purpose\nProvides the drying off on a location\n",
        "tags": [ "addition"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the drying off for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarMilkingDryOffEventResource"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    },
    "/locations/{location-scheme}/{location-id}/Abortion-Events": {
      "get": {
        "operationId" : "get-Abortion-Events",
        "summary": "Get the abortion events for a certain location",
        "description": "# Purpose\nProvides the abortion events on a location\n",
        "tags": [ "addition"],
        "parameters": [
          {
            "name": "location-scheme",
            "in": "path",
            "description": "The scheme id for the location identifier.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "nl.ubn",
                "de.farmid",
                "be.pen"
              ]
            }
          },
          {
            "name": "location-id",
            "in": "path",
            "description": "The unique identifier for the location.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful. The response contains the abortion events for the given location",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/icarReproAbortionEventResource"
                }
              }
            }
          },
          "default": {
            "description": "An error has occured while handling the request. Check the content of the message for the error details.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/error"
                      }
                    }
                  },
                  "description": "A default response containing only a list of errors"
                }
              }
            }
          }
        }
      }
    }
  },	  
  "components": {
    "schemas": {
      "responseErrors": {
        "type": "object",
        "properties": {
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      },
      "responseMetaData": {
        "type": "object",
        "properties": {
          "metaData": {
            "$ref": "#/components/schemas/metaData"
          }
        }
      },
      "error": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "exampleErrorResource.json"
          }
        }
      },
      "metaData": {
        "required": [
          "source"
        ],
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMetaDataResource.json"
          }
        }
      },
      "icarMilkingVisitsResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarMilkingVisitsResponseDataSources"
        }
      },
      "icarMilkingVisitsResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarMilkingVisitsResponseDataSource"
          }
        ]
      },
      "icarMilkingVisitsResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMilkingVisitResource.json"
          }
        }
      },
      "icarMovementArrivalResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarMovementArrivalResponseDataSources"
        }
      },
      "icarMovementArrivalResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarMovementArrivalResponseDataSource"
          }
        ]
      },
      "icarMovementArrivalResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMovementArrivalResource.json"
          }
        }
      },
      "icarMovementDepartureResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarMovementDepartureResponseDataSources"
        }
      },
      "icarMovementDepartureResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarMovementDepartureResponseDataSource"
          }
        ]
      },
      "icarMovementDepartureResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMovementDepartureResource.json"
          }
        }
      },
      "icarAnimalCoreResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarAnimalCoreResponseDataSources"
        }
      },
      "icarAnimalCoreResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarAnimalCoreResponseDataSource"
          }
        ]
      },
      "icarAnimalCoreResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarAnimalCoreResource.json"
          }
        }
      },
      "icarMovementBirthRegistrationResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarMovementBirthRegistrationResponseDataSources"
        }
      },
      "icarMovementBirthRegistrationResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarMovementBirthRegistrationResponseDataSource"
          }
        ]
      },
      "icarMovementBirthRegistrationResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMovementBirthRegistrationResource.json"
          }
        }
      },
      "icarMovementDeathResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/icarMovementDeathResponseDataSources"
        }
      },
      "icarMovementDeathResponseDataSources": {
        "allOf": [
          {
            "$ref": "#/components/schemas/responseMetaData"
          },
          {
            "$ref": "#/components/schemas/responseErrors"
          },
          {
            "$ref": "#/components/schemas/icarMovementDeathResponseDataSource"
          }
        ]
      },
      "icarMovementDeathResponseDataSource": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "icarMovementDeathResource.json"
          }
        }
      }
    },
    "icarReproPregnancyDiagnosisEventResource": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "icarReproPregnancyDiagnosisEventResource.json"
        }
      }
    },
    "icarReproInseminationEventResource": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "icarReproInseminationEventResource.json"
        }
      }
    },
    "icarMilkingDryOffEventResource": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "icarMilkingDryOffEventResource.json"
        }
      }
    },
    "icarReproAbortionEventResource": {
      "type": "object",
      "properties": {
        "data": {
          "$ref": "icarReproAbortionEventResource.json"
        }
      }
    }
  }
}
