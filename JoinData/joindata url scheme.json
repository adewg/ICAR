{
	"openapi": "3.0.1",
	"info": {
		"title": "JoinData Message definitions",
		"description": "The specification describes the JoinData Datahub Broker API. \n",
		"version": "1.0"
	},
	"servers": [
		{
			"url": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/"
		}
	],
	"security": [
		{
			"jdClient": [
				"fullaccess"
			]
		},
		{
			"jdAuthorizationCode": [
				"fullaccess"
			]
		}
	],
	"tags": [
		{
			"name": "New in JD",
			"description": "Messages which do not exist in current ICAR-ADE draft but should be added\n"
		},
		{
			"name": "Existing in Draft",
			"description": "Messages which already defined in the ICAR-ADE draft and should be merged\n"
		},
		{
			"name": "New in Draft",
			"description": "Messages already defined in the ICAR-ADE draft and new for JoinData\n"
		}		
	],
	"paths": {
		"/locations/{location-scheme}/{location-id}/milking-visits": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the data for milking visits. \nCompare to /herds/animal-events/MilkingEvents.",
				"description": "# Purpose\nProvides data from visits of animals to a milking parlour.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkingVisitsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occured while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/characteristics": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the quarter milking data for a specific milking visit.\nCompare to /herds/animal-events/MilkingEvents.",
				"description": "# Purpose\nProvides quarter milking data from a singular visit of an animal to a milking parlour.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milking-visit-id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkCharacteristicsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occured while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/quarter-milkings": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the quarter milking data for a specific milking visit.\nCompare to /herds/animal-events/MilkingEvents.",
				"description": "# Purpose\nProvides quarter milking data from a singular visit of an animal to a milking parlour.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milking-visit-id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarQuarterMilkingsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occured while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/animal-milking-sample": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the quarter milking data for a specific milking visit.\nCompare to /herds/animal-events/MilkingEvents",
				"description": "# Purpose\nProvides quarter milking data from a singular visit of an animal to a milking parlour.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milking-visit-id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarAnimalMilkingSampleResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occured while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/herd-list": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the animals on a location.\nCompare to /herds/animals",
				"description": "_Based upon ICAR ADE GetHerdListRequest._\n# Purpose\nReturns the herd list for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the animal identifiers for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHerdListResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/herd-list-core-data-set": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the core details of the animals on a location.\n Compare to /herds/animals and /herds/animal.",
				"description": "_Based upon ICAR ADE GetHerdListRequest._\n# Purpose\nReturns a herd list for a location containing core animal data.\n'",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the animal core data set for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHerdListCoreDataSetResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/dairy-grazing-summaries": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the dairy grazing summary data",
				"description": "# Purpose\nReturns a summary with information about the grazing pattern of the animals on the given location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "modified-since",
						"in": "query",
						"description": "The date-time of insertion or last update of the event.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the dairy grazing summary data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarDairyGrazingSummariesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/feed-intakes": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get feed intakes of the animals on the location specified.",
				"description": "# Purpose\nReturns feed intakes of the animals on the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the intake data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarFeedIntakesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/gestations": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get gestation information for all in-herd animals on a location.",
				"description": "# Purpose\nReturns a list with current gestation information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the gestation data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarGestationsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/health-activities": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get health activity information for animals on a location.",
				"description": "# Purpose\nReturns a list with health activity information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "animal-scheme",
						"in": "query",
						"description": "The scheme id for the animal identifier. Should be used together with animal-id.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "animal-id",
						"in": "query",
						"description": "The unique identifier for the animal. Should be used together with animal-scheme.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the health activity data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHealthActivitiesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/health-reports": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get health information for a location.",
				"description": "# Purpose\nReturns a list with current health information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the health data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHealthReportsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/heat-activities": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get in-heat activity information for female animals on a location.",
				"description": "# Purpose\nReturns a list with in-heat activity information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"required": true,
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "animal-scheme",
						"in": "query",
						"description": "The scheme id for the animal identifier. Should be used together with animal-id.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "animal-id",
						"in": "query",
						"description": "The unique identifier for the animal. Should be used together with animal-scheme.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the in-heat activity data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHeatActivitiesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/heat-reports": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get in-heat information for a location.\nCompare to /herds/animal-events/HeatEvents",
				"description": "# Purpose\nReturns a list with current in-heat information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the in-heat data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHeatReportsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/herd-list-movements": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the animal movements on a location.\nCompare to /herds/animal-events/ArrivalEvents and /herds/animal-events/DepatureEvents",
				"description": "_Based upon ICAR ADE GetHerdListRequest._\n# Purpose\nReturns the animal movements for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the animal movement data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarHerdListMovementsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/animal-registrations": {
			"post": {
				"tags": [
					"New in JD"
				],
				"summary": "Pushes a singular animal (governmental) registration",
				"description": "# Purpose\nProvides data from a singular animal registration\nSpecific for a country (NL).",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"description": "The animal you want to register",
					"content": {
						"application/json": {
							"schema": {
								"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarAnimalRegistrationBodyType.json"
							}
						}
					},
					"required": true
				},
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarAnimalRegistrationResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milking-visits/{milking-visit-id}/teat-positions": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the teat positions for a specific milking visit",
				"description": "# Purpose\nProvides teat positions from a singular visit of an animal to a milking parlour\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milking-visit-id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Successful. The response contains the milking results for the given location",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarTeatPositionsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/identification-tags": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the identification tags on a location.",
				"description": "# Purpose\nReturns the identification tags for a location. Examples are Nedap, SCR and Gallagher identification tags (EIDs) for animals.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the current identification tags available on the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarIdentificationTagsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/inseminations": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the executed insemantions on a location.",
				"description": "# Purpose\nReturns the inseminations for a location.\n Compare to /herds/animal-events/InseminationEvents.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "modified-since",
						"in": "query",
						"description": "The date-time of insertion or last update of the event.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the insemination data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarInseminationsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milk-deliveries": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get milk deliveries of the location specified.",
				"description": "# Purpose\nReturns milk deliveries of the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the milk delivery data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkDeliveriesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milk-deliveries/{milk-delivery-id}/quality-reports": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the test results for a specific milk delivery of the location specified.",
				"description": "todo",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milk-delivery-id",
						"in": "path",
						"description": "The unique identifier for a milk delivery for a specific location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the quality reports of the milk delivery data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkDeliveryQualityReportsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milk-intakes": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get milk intakes of the animals on the location specified.",
				"description": "# Purpose\nReturns milk intakes of the animals on the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the intake data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkIntakesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milk-invoices": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get milk delivery invoices of the location specified.",
				"description": "# Purpose\nReturns the invoices received for the milk delivered of the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the invoices received for the deliverd milk for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkInvoicesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/milk-invoices/{milk-invoice-id}/items": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the items of the milk delivery invoices of the location specified.",
				"description": "# Purpose\nReturns the items of the invoices received for the milk delivered of the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "milk-invoice-id",
						"in": "path",
						"description": "The unique identifier for a milk invoice for a specific location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the items of the invoices received for the deliverd milk for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarMilkInvoiceItemsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/slaughters": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the slaughterhouse events for all animals being slaughtered.",
				"description": "# Purpose\nReturns a list animals being slaughtered with their details for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the slaughter events data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarSlaughtersResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},

		"/locations/{location-scheme}/{location-id}/parturitions": {
			"get": {
				"tags": [
					"New in Draft"
				],
				"summary": "Get the parturition events for all in-herd animals on a location.\n Compare to /herds/animal-events/ParturitionCheckEvents.\n",
				"description": "_Subject to change_\n# Purpose\nReturns a list with pregnancy-checks events information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the pregnancy check events data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/adewg/ICAR/master/DataLinker/ICARAnimalEventParturition.json"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},

		"/locations/{location-scheme}/{location-id}/offsprings": {
			"get": {
				"tags": [
					"New in Draft"
				],
				"summary": "Get the offspring events for all in-herd animals on a location.\n Compare to /herds/animal-events/OffspringEvents.\n",
				"description": "_Subject to change_\n# Purpose\nReturns a list with offspring events information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the pregnancy check events data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "https://raw.githubusercontent.com/adewg/ICAR/master/DataLinker/ICARAnimalParturitionOffspring.json"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},

		"/locations/{location-scheme}/{location-id}/pregnancy-checks": {
			"get": {
				"tags": [
					"Existing in Draft"
				],
				"summary": "Get the pregnancy checks events for all in-herd animals on a location.\n Compare to /herds/animal-events/PregnancyCheckEvents.\n",
				"description": "_Subject to change_\n# Purpose\nReturns a list with pregnancy-checks events information for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the pregnancy check events data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarPregnancyCheckResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/water-intakes": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get water intakes of the animals on the location specified.",
				"description": "# Purpose\nReturns water intakes of the animals on the location specified.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the intake data for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarWaterIntakesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/weights": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get information about the weight of an animal",
				"description": "_Subject to change_\n# Purpose\nReturns a list of weight measurement events for a location.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains the weight data for the animals on the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarWeightsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/biodiversity-reports": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Get the bio-diversity reports for the location in the given period.",
				"description": "# Purpose\nGet the bio-diversity reports for the location in the given period.\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "start-date-time",
						"in": "query",
						"description": "The start of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					},
					{
						"name": "end-date-time",
						"in": "query",
						"description": "The end of the date-time range for the data to get in the request.",
						"schema": {
							"type": "string",
							"format": "date-time"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains a list of all generated biodiversity reports for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/icarBiodiversityReportsResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		},
		"/locations/{location-scheme}/{location-id}/addresses": {
			"get": {
				"tags": [
					"New in JD"
				],
				"summary": "Gets the currently known addresses for this company",
				"description": "# Purpose\nGets the known addresses for this company\n",
				"parameters": [
					{
						"name": "location-scheme",
						"in": "path",
						"description": "The scheme id for the location identifier.",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"nl-v1",
								"be-v1"
							]
						}
					},
					{
						"name": "location-id",
						"in": "path",
						"description": "The unique identifier for the location.",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "Successful. The response contains a list of all generated biodiversity reports for the location.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/uncefactAddressesResponse"
								}
							}
						}
					},
					"default": {
						"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"errors": {
											"type": "array",
											"items": {
												"$ref": "#/components/schemas/error"
											}
										}
									},
									"description": "A default response containing only a list of errors"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"schemas": {
			"icarAnimalRegistrationResponse": {
				"$ref": "#/components/schemas/icarAnimalRegistrationResponseDataSources"
			},
			"icarAnimalRegistrationResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarAnimalRegistrationResponseDataSource"
					}
				]
			},
			"icarAnimalRegistrationResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarAnimalRegistrationResource.json"
					}
				}
			},
			"icarMilkInvoicesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkInvoicesResponseDataSources"
				}
			},
			"icarMilkInvoicesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkInvoicesResponseDataSource"
					}
				]
			},
			"icarMilkInvoicesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkInvoicesResource.json"
					}
				}
			},
			"icarMilkingVisitsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkingVisitsResponseDataSources"
				}
			},
			"icarMilkingVisitsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkingVisitsResponseDataSource"
					}
				]
			},
			"icarMilkingVisitsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkingVisitResource.json"
					}
				}
			},
			"icarHerdListResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHerdListResponseDataSources"
				}
			},
			"icarHerdListResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHerdListResponseDataSource"
					}
				]
			},
			"icarHerdListResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHerdListAnimalsResource.json"
					}
				}
			},
			"icarFeedIntakesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarFeedIntakesResponseDataSources"
				}
			},
			"icarFeedIntakesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarFeedIntakesResponseDataSource"
					}
				]
			},
			"icarFeedIntakesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarFeedIntakesResource.json"
					}
				}
			},
			"icarHeatActivitiesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHeatActivitiesResponseDataSources"
				}
			},
			"icarHeatActivitiesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHeatActivitiesResponseDataSource"
					}
				]
			},
			"icarHeatActivitiesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHeatActivitiesResource.json"
					}
				}
			},
			"icarHeatActivityScrSenseTime": {
				"type": "object",
				"properties": {
					"heatBehavior": {
						"type": "number",
						"description": "The behavior of the cow as it relates to it being in heat.",
						"format": "double"
					},
					"dailyRumination": {
						"type": "number",
						"description": "The number of minutes a cow ruminates during the day (24-hour period)",
						"format": "double"
					},
					"dailyEating": {
						"type": "number",
						"description": "The number of minutes a cow eats during the day (24 hour period)",
						"format": "double"
					},
					"activityTrend": {
						"type": "number",
						"description": "The trend of the cow’s activity. This is usually higher when the cow is approaching the time it is in heat.",
						"format": "double"
					}
				},
				"description": "Contains SenseTime specific fields. Only one element can be present per item."
			},
			"icarHeatActivityVendorSpecific": {
				"type": "object",
				"properties": {
					"scrSenseTime": {
						"$ref": "#/components/schemas/icarHeatActivityScrSenseTime"
					}
				},
				"description": "Contains vendor specific fields. Only one vendor element can be present."
			},
			"icarWeightsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarWeightsResponseDataSources"
				}
			},
			"icarWeightsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarWeightsResponseDataSource"
					}
				]
			},
			"icarWeightsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarWeightsResource.json"
					}
				}
			},
			"icarInseminationsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarInseminationsResponseDataSources"
				}
			},
			"icarInseminationsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarInseminationsResponseDataSource"
					}
				]
			},
			"icarInseminationsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarInseminationsResource.json"
					}
				}
			},
			"icarIdentificationTagsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarIdentificationTagsResponseDataSources"
				}
			},
			"icarIdentificationTagsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarIdentificationTagsResponseDataSource"
					}
				]
			},
			"icarIdentificationTagsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarIdentificationTagsResource.json"
					}
				}
			},
			"icarMilkDeliveryQualityReportsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkDeliveryQualityReportsResponseDataSources"
				}
			},
			"icarMilkDeliveryQualityReportsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkDeliveryQualityReportsResponseDataSource"
					}
				]
			},
			"icarMilkDeliveryQualityReportsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkDeliveryQualityReportsResource.json"
					}
				}
			},
			"icarHealthReportsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHealthReportsResponseDataSources"
				}
			},
			"icarHealthReportsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHealthReportsResponseDataSource"
					}
				]
			},
			"icarHealthReportsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHealthReportsResource.json"
					}
				}
			},
			"icarHealthReportVendorSpecific": {
				"type": "object",
				"properties": {
					"scrSenseTime": {
						"$ref": "#/components/schemas/icarHealthReportScrSenseTime"
					},
					"nedapBI": {
						"$ref": "#/components/schemas/icarHealthReportNedapBusinessInsight"
					}
				},
				"description": "Contains vendor specific fields. Only one vendor element can be present."
			},
			"icarHealthReportNedapBusinessInsight": {
				"type": "object",
				"description": "Specific fields for Nedap Business Insight. TO BE IMPLEMENTED"
			},
			"icarHealthReportScrSenseTime": {
				"type": "object",
				"properties": {
					"dailyRumination": {
						"type": "integer",
						"format": "int32"
					},
					"healthIndex": {
						"type": "number",
						"description": "One digit after decimal point",
						"format": "double"
					},
					"healthIndexThreshold": {
						"type": "integer",
						"description": "For report coloring",
						"format": "int32"
					}
				},
				"description": "Specific fields for SCR SenseTime"
			},
			"icarWaterIntakesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarWaterIntakesResponseDataSources"
				}
			},
			"icarWaterIntakesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarWaterIntakesResponseDataSource"
					}
				]
			},
			"icarWaterIntakesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarWaterIntakesResource.json"
					}
				}
			},
			"icarDairyGrazingSummariesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarDairyGrazingSummariesResponseDataSources"
				}
			},
			"icarDairyGrazingSummariesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarDairyGrazingSummariesResponseDataSource"
					}
				]
			},
			"icarDairyGrazingSummariesResponseDataSource": {
				"type": "array",
				"items": {
					"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarDairyGrazingSummariesResource.json"
				}
			},
			"icarHerdListCoreDataSetResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHerdListCoreDataSetResponseDataSources"
				}
			},
			"icarHerdListCoreDataSetResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHerdListCoreDataSetResponseDataSource"
					}
				]
			},
			"icarHerdListCoreDataSetResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHerdListCoreDataSetsResource.json"
					}
				}
			},
			"icarTeatPositionsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarTeatPositionsResponseDataSources"
				}
			},
			"icarTeatPositionsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarTeatPositionsResponseDataSource"
					}
				]
			},
			"icarTeatPositionsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarTeatPositionsResource.json"
					}
				}
			},
			"icarBiodiversityReportsResponse": {
				"$ref": "#/components/schemas/icarBiodiversityReportsResponseDataSources"
			},
			"icarBiodiversityReportsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarBiodiversityReportsResponseDataSource"
					}
				]
			},
			"icarBiodiversityReportsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarBiodiversityReportsResource.json"
					}
				}
			},
			"icarMilkIntakesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkIntakesResponseDataSources"
				}
			},
			"icarMilkIntakesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkIntakesResponseDataSource"
					}
				]
			},
			"icarMilkIntakesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkIntakesResource.json"
					}
				}
			},
			"icarMilkDeliveriesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkDeliveriesResponseDataSources"
				}
			},
			"icarMilkDeliveriesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkDeliveriesResponseDataSource"
					}
				]
			},
			"icarMilkDeliveriesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkDeliveriesResource.json"
					}
				}
			},
			"icarMilkInvoiceItemsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkInvoiceItemsResponseDataSources"
				}
			},
			"icarMilkInvoiceItemsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkInvoiceItemsResponseDataSource"
					}
				]
			},
			"icarMilkInvoiceItemsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkInvoiceItemsResource.json"
					}
				}
			},
			"icarAnimalMilkingSampleResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarAnimalMilkingSampleResponseDataSources"
				}
			},
			"icarAnimalMilkingSampleResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarAnimalMilkingSampleResponseDataSource"
					}
				]
			},
			"icarAnimalMilkingSampleResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarAnimalMilkingSampleResource.json"
					}
				}
			},
			"icarHerdListMovementsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHerdListMovementsResponseDataSources"
				}
			},
			"icarHerdListMovementsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHerdListMovementsResponseDataSource"
					}
				]
			},
			"icarHerdListMovementsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHerdListMovementsResource.json"
					}
				}
			},
			"icarQuarterMilkingsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarQuarterMilkingsResponseDataSources"
				}
			},
			"icarQuarterMilkingsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarQuarterMilkingsResponseDataSource"
					}
				]
			},
			"icarQuarterMilkingsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarQuarterMilkingsResource.json"
					}
				}
			},
			"icarHeatReportsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHeatReportsResponseDataSources"
				}
			},
			"icarHeatReportsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHeatReportsResponseDataSource"
					}
				]
			},
			"icarHeatReportsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHeatReportsResource.json"
					}
				}
			},
			"icarHeatReportVendorSpecific": {
				"type": "object",
				"properties": {
					"scrSenseTime": {
						"$ref": "#/components/schemas/icarHeatReportScrSenseTime"
					},
					"nedapBI": {
						"$ref": "#/components/schemas/icarHeatReportNedapBusinessInsight"
					}
				},
				"description": "Contains vendor specific fields. Only one vendor element can be present."
			},
			"icarHeatReportScrSenseTime": {
				"type": "object",
				"properties": {
					"breedingWindow": {
						"type": "integer",
						"format": "int32"
					},
					"heatIndex": {
						"type": "integer",
						"format": "int32"
					}
				},
				"description": "Specific fields for SCR SenseTime"
			},
			"icarHeatReportNedapBusinessInsight": {
				"type": "object",
				"description": "Specific fields for Nedap Business Insight. TO BE IMPLEMENTED"
			},
			"icarPregnancyCheckResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarPregnancyChecksResponseDataSources"
				}
			},
			"icarPregnancyChecksResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarPregnancyChecksResponseDataSource"
					}
				]
			},
			"icarPregnancyChecksResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarPregnancyChecksResource.json"
					}
				}
			},
			"icarGestationsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarGestationsResponseDataSources"
				}
			},
			"icarGestationsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarGestationsResponseDataSource"
					}
				]
			},
			"icarGestationsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarGestationsResource.json"
					}
				}
			},
			"uncefactAddressesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/uncefactAddressesResponseDataSources"
				}
			},
			"uncefactAddressesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/uncefactAddressesResponseDataSource"
					}
				]
			},
			"uncefactAddressesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/uncefactAddressResource.json"
					}
				}
			},
			"icarSlaughtersResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarSlaughtersResponseDataSources"
				}
			},
			"icarSlaughtersResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarSlaughtersResponseDataSource"
					}
				]
			},
			"icarSlaughtersResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarSlaughtersResource.json"
					}
				}
			},
			"icarHealthActivitiesResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarHealthActivitiesResponseDataSources"
				}
			},
			"icarHealthActivitiesResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarHealthActivitiesResponseDataSource"
					}
				]
			},
			"icarHealthActivityScrSenseTime": {
				"type": "object",
				"properties": {
					"dailyRumination": {
						"type": "number",
						"description": "The number of minutes a cow ruminates during the day (24-hour period)",
						"format": "double"
					},
					"dailyEating": {
						"type": "number",
						"description": "The number of minutes a cow eats during the day (24 hour period)",
						"format": "double"
					},
					"hourlyRumination": {
						"type": "number",
						"description": "The number of minutes a cow ruminates during an hour.",
						"format": "double"
					},
					"hourlyEating": {
						"type": "number",
						"description": "The number of minutes a cow eats an hour.",
						"format": "double"
					},
					"activityTrend": {
						"type": "number",
						"description": "The trend of the cow’s activity. Cows when they are not well are less active.",
						"format": "double"
					}
				},
				"description": "Contains SenseTime specific fields. Only one element can be present per item."
			},
			"icarHealthActivitiesResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarHealthActivitiesResource.json"
					}
				}
			},
			"icarMilkCharacteristicsResponse": {
				"type": "array",
				"items": {
					"$ref": "#/components/schemas/icarMilkCharacteristicsResponseDataSources"
				}
			},
			"icarMilkCharacteristicsResponseDataSources": {
				"allOf": [
					{
						"$ref": "#/components/schemas/responseDataSource"
					},
					{
						"$ref": "#/components/schemas/responseErrors"
					},
					{
						"$ref": "#/components/schemas/icarMilkCharacteristicsResponseDataSource"
					}
				]
			},
			"icarMilkCharacteristicsResponseDataSource": {
				"type": "object",
				"properties": {
					"data": {
						"$ref": "https://raw.githubusercontent.com/alamers/ICAR/master/JoinData/icarMilkCharacteristicsResource.json"
					}
				}
			},
			"responseErrors": {
				"type": "object",
				"properties": {
					"errors": {
						"type": "array",
						"items": {
							"$ref": "#/components/schemas/error"
						}
					}
				}
			},
			"dataSource": {
				"type": "string",
				"description": "Source where data is retrieved from. Details can be retrieved from the source register."
			},
			"error": {
				"type": "object",
				"properties": {
					"id": {
						"type": "string",
						"description": "A unique identifier for this particular occurrence of the problem"
					},
					"status": {
						"type": "integer",
						"description": "The HTTP status code applicable to this problem, expressed as a string value",
						"format": "int32"
					},
					"code": {
						"type": "string",
						"description": "An application-specific error code, expressed as a string value."
					},
					"title": {
						"type": "string",
						"description": "A short, human-readable summary of the problem that SHOULD NOT change from occurrence to occurrence of the problem, except for purposes of localization."
					},
					"detail": {
						"type": "string",
						"description": "A human-readable explanation specific to this occurrence of the problem. Like title, this field’s value can be localized."
					},
					"meta": {
						"type": "object",
						"properties": {
							
						}
					}
				},
				"description": "A human-readable error message describing what went wrong."
			},
			"responseDataSource": {
				"required": [
					"id"
				],
				"type": "object",
				"properties": {
					"id": {
						"$ref": "#/components/schemas/dataSource"
					}
				}
			}
		},
		"responses": {
			"error": {
				"description": "An error has occurred while handling the request. Check the content of the message for the error details.",
				"content": {
					"application/json": {
						"schema": {
							"type": "object",
							"properties": {
								"errors": {
									"type": "array",
									"items": {
										"$ref": "#/components/schemas/error"
									}
								}
							},
							"description": "A default response containing only a list of errors"
						}
					}
				}
			}
		},
		"parameters": {
			"queryEndDateTime": {
				"name": "end-date-time",
				"in": "query",
				"description": "The end of the date-time range for the data to get in the request.",
				"schema": {
					"type": "string",
					"format": "date-time"
				}
			},
			"pathIcarMilkingVisitId": {
				"name": "milking-visit-id",
				"in": "path",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"pathLocationScheme": {
				"name": "location-scheme",
				"in": "path",
				"description": "The scheme id for the location identifier.",
				"required": true,
				"schema": {
					"type": "string",
					"enum": [
						"nl-v1",
						"be-v1"
					]
				}
			},
			"queryEndDateTimeRequired": {
				"name": "end-date-time",
				"in": "query",
				"description": "The end of the date-time range for the data to get in the request.",
				"required": true,
				"schema": {
					"type": "string",
					"format": "date-time"
				}
			},
			"queryModifiedSince": {
				"name": "modified-since",
				"in": "query",
				"description": "The date-time of insertion or last update of the event.",
				"schema": {
					"type": "string",
					"format": "date-time"
				}
			},
			"pathLocationId": {
				"name": "location-id",
				"in": "path",
				"description": "The unique identifier for the location.",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"pathMilkDeliveryId": {
				"name": "milk-delivery-id",
				"in": "path",
				"description": "The unique identifier for a milk delivery for a specific location.",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"queryAnimalScheme": {
				"name": "animal-scheme",
				"in": "query",
				"description": "The scheme id for the animal identifier. Should be used together with animal-id.",
				"required": true,
				"schema": {
					"type": "string",
					"enum": [
						"nl-v1",
						"be-v1"
					]
				}
			},
			"queryStartDateTimeRequired": {
				"name": "start-date-time",
				"in": "query",
				"description": "The start of the date-time range for the data to get in the request.",
				"required": true,
				"schema": {
					"type": "string",
					"format": "date-time"
				}
			},
			"pathMilkInvoiceId": {
				"name": "milk-invoice-id",
				"in": "path",
				"description": "The unique identifier for a milk invoice for a specific location.",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"queryAnimalId": {
				"name": "animal-id",
				"in": "query",
				"description": "The unique identifier for the animal. Should be used together with animal-scheme.",
				"required": true,
				"schema": {
					"type": "string"
				}
			},
			"queryStartDateTime": {
				"name": "start-date-time",
				"in": "query",
				"description": "The start of the date-time range for the data to get in the request.",
				"schema": {
					"type": "string",
					"format": "date-time"
				}
			}
		},
		"securitySchemes": {
			"jdClient": {
				"type": "oauth2",
				"description": "Secure access using client credentials grant",
				"flows": {
					"clientCredentials": {
						"tokenUrl": "https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/token",
						"scopes": {
							"fullaccess": "Full access to all resources when mandate is available"
						}
					}
				}
			},
			"jdAuthorizationCode": {
				"type": "oauth2",
				"description": "Secure access using authorization grant flow",
				"flows": {
					"authorizationCode": {
						"authorizationUrl": "https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/auth",
						"tokenUrl": "https://production.join-data.net/auth/realms/datahub/protocol/openid-connect/token",
						"scopes": {
							"fullaccess": "Full access to all resources when mandate is available"
						}
					}
				}
			}
		}
	}
}